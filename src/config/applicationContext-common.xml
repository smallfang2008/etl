<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/aop  
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	
<!--	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean" >-->
<!--        <property name="targetClass" value="org.springframework.util.Log4jConfigurer" />-->
<!--        <property name="targetMethod" value="initLogging" />-->
<!--        <property name="arguments">-->
<!--            <list>-->
<!--	  			<value>classpath:config/log4j.properties</value>-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->
	
	
  	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">  
	  		<list>    
	  			<value>classpath:config/etl.properties</value>      
	  		</list>   
	  	</property>  
	</bean>

	<!-- AOP自动代理 -->
	<aop:aspectj-autoproxy /> 
	<!-- 自动装配 -->
	<context:annotation-config />
	<context:component-scan base-package="com.zbiti.etl.core,com.zbiti.etl.extend,com.zbiti.etl.runtime"/>
    
<!--    <bean id="DevDataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
<!--    	<property name="driverClass" value="${jdbcMaster.driverClassName}"></property>-->
<!--		<property name="jdbcUrl" value="jdbc:oracle:thin:@132.228.241.94:17815:orcl"></property>-->
<!--		<property name="user" value="etl_new"></property>-->
<!--		<property name="password" value="etl_new"></property>-->
<!--		<property name="preferredTestQuery" value="select 1 from dual" />-->
<!--		<property name="idleConnectionTestPeriod" value="60" />-->
<!--		<property name="testConnectionOnCheckout" value="true" />-->
<!--		<property name="checkoutTimeout" value="100"/>-->
<!--    </bean>-->
    
<!--    <bean id="DevDataSource" parent="parentDataSource"-->
<!--        destroy-method="close">-->
<!--        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>-->
<!--        <property name="url" value="jdbc:oracle:thin:@132.228.163.120:33337:NDC1"></property>-->
<!--        <property name="username" value="etl_new"></property>-->
<!--        <property name="password" value="etl_new"></property>-->
<!--    </bean> -->
	<bean id="DevDataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
        <property name="url" value="jdbc:oracle:thin:@132.228.68.41:1521:etl"></property>
        <property name="username" value="etl_new"></property>
        <property name="password" value="etl_new"></property>
        <property name="maxWait" value="600"/>
        <property name="minIdle" value="5"/>
        <property name="maxIdle" value="10"/>
        <property name="minEvictableIdleTimeMillis" value="120000"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="validationQuery" value="select 1 from dual"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true" />
        <property name="testOnReturn" value="true" />
    </bean> 
<!--    <bean id="DevDataSource" class="org.apache.commons.dbcp.BasicDataSource"-->
<!--        destroy-method="close">-->
<!--        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>-->
<!--        <property name="url" value="jdbc:oracle:thin:@132.228.241.94:17815:orcl"></property>-->
<!--        <property name="username" value="etl_new"></property>-->
<!--        <property name="password" value="etl_new"></property>-->
<!--        <property name="maxWait" value="600"/>-->
<!--        <property name="minIdle" value="5"/>-->
<!--        <property name="maxIdle" value="10"/>-->
<!--        <property name="minEvictableIdleTimeMillis" value="120000"/>-->
<!--        <property name="timeBetweenEvictionRunsMillis" value="60000"/>-->
<!--        <property name="validationQuery" value="select 1 from dual"/>-->
<!--        <property name="testWhileIdle" value="true"/>-->
<!--        <property name="testOnBorrow" value="true" />-->
<!--        <property name="testOnReturn" value="true" />-->
<!--    </bean> -->
    
	<bean id="dataSource" class="com.zbiti.core.util.DataSources">   
        <property name="targetDataSources">   
            <map key-type="java.lang.String">   
                <entry value-ref="DevDataSource" key="DevDataSource"></entry>   
            </map>   
        </property>   
        <property name="defaultTargetDataSource" ref="DevDataSource"></property>   
    </bean> 
    
    <!-- 事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
        <property name="dataSource" ref="dataSource" />   
    </bean> 
	
	<!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:config/mybatis.xml"/>
		<!-- mapper和resultmap配置路径 -->
		<property name="mapperLocations">
			<list>
				<!-- 表示在com.zbiti包或以下所有目录中，以-resultmap.xml结尾所有文件 -->
				<value>classpath*:com/zbiti/**/*-resultmap.xml</value>
				<value>classpath*:com/zbiti/**/dao/*-mapper.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 通过扫描的模式，扫描目录在com/zbiti/**/dao目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zbiti.**.dao"/>
		<property name="markerInterface" value="com.zbiti.core.mapper.SqlMapper"/>
	</bean>

	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="list*" propagation="SUPPORTS" />
			<tx:method name="check*" propagation="SUPPORTS" />

			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	
<!--	<bean id="redisCacheClear" class="com.zbiti.common.RedisCacheClearAspact"/>-->
	<aop:config>
		<aop:pointcut id="transactionPointcut"
			expression="execution(* com.zbiti.etl..smo..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
		
<!--		<aop:aspect ref="redisCacheClear">-->
<!--			<aop:pointcut expression="execution(* com.zbiti.etl..smo..*Impl.save(..))" id="redisCacheClearPointcut"/>-->
<!--			<aop:after method="clear" pointcut-ref="redisCacheClearPointcut"/>-->
<!--		</aop:aspect>-->
		
	</aop:config>
	
	<bean id="jobSchedule" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="autoStartup" value="false"></property>
	</bean>  
	
	
</beans>
